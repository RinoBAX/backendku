
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               Int                @id @default(autoincrement())
  nama             String
  email            String             @unique
  password         String 
  picture          String? 
  nomorTelepon     String?            @unique
  kecamatan        String?
  domisili         String?
  fotoKtp          String? 

  kodeReferral     String             @unique @default(cuid())
  uplineId         Int?
  upline           User?              @relation("ReferralTree", fields: [uplineId], references: [id], onDelete: SetNull)
  downlines        User[]             @relation("ReferralTree")

  balance          Decimal            @default(0) @db.Decimal(12, 2)
  role             Role               @default(USER)
  statusRegistrasi RegistrationStatus @default(PENDING)

  projectsCreated  Project[] 
  submissions      Submission[] 
  withdrawals      Withdrawal[] 
  transactions     Transaction[] 

  tglDibuat        DateTime           @default(now())
  tglDiperbarui    DateTime           @updatedAt

  @@map("users")
}

model Project {
  id          Int      @id @default(autoincrement())
  namaProyek  String
  nilaiProyek Decimal  @db.Decimal(12, 2) 
  projectUrl  String?
  
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])

  fields      ProjectField[]
  submissions Submission[]

  tglDibuat   DateTime @default(now())

  @@map("projects")
}

model ProjectField {
  id          Int       @id @default(autoincrement())
  label       String 
  fieldType   FieldType 
  isRequired  Boolean   @default(true)

  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)

  submissionValues SubmissionValue[]

  @@map("project_fields")
}


model Submission {
  id               Int              @id @default(autoincrement())
  status           SubmissionStatus @default(PENDING) 
  catatanAdmin     String?          

  userId           Int
  user             User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  projectId        Int
  project          Project          @relation(fields: [projectId], references: [id], onDelete: Restrict)

  values           SubmissionValue[]
  transactions     Transaction[]

  tglDibuat        DateTime         @default(now())

  @@map("submissions")
}

model SubmissionValue {
  id          Int    @id @default(autoincrement())
  value       String @db.Text 

  submissionId Int
  submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)

  projectFieldId Int
  projectField   ProjectField @relation(fields: [projectFieldId], references: [id], onDelete: Cascade)

  @@map("submission_values")
}


model Transaction {
  id              Int             @id @default(autoincrement())
  tipe            TransactionType
  jumlah          Decimal         @db.Decimal(12, 2)
  deskripsi       String

  userId          Int
  user            User            @relation(fields: [userId], references: [id], onDelete: Restrict)

  submissionId    Int?
  submission      Submission?     @relation(fields: [submissionId], references: [id], onDelete: SetNull)

  withdrawalId    Int?            @unique 
  withdrawal      Withdrawal?     @relation(fields: [withdrawalId], references: [id])

  transactionDate DateTime        @default(now())

  @@map("transactions")
}

model Withdrawal {
  id              Int              @id @default(autoincrement())
  totalWithdrawal Decimal          @db.Decimal(12, 2)
  status          WithdrawalStatus @default(PENDING) 

  userId          Int
  user            User             @relation(fields: [userId], references: [id], onDelete: Restrict)

  transaction     Transaction?

  tglDiajukan     DateTime         @default(now())
  tglDiproses     DateTime?

  @@map("withdrawals")
}


enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum RegistrationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum FieldType {
  TEXT
  TEXTAREA
  IMAGE
  FILE
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}

enum WithdrawalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum TransactionType {
  PENGERJAAN_PROYEK 
  KOMISI_UPLINE_1   
  KOMISI_UPLINE_2   
  PENARIKAN_DANA    
}
