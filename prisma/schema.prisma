datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// =============================================
// MODEL PENGGUNA DAN OTENTIKASI
// =============================================

model User {
  id                  Int                   @id @default(autoincrement())
  nama                String
  email               String                @unique
  password            String
  picture             String?
  nomorTelepon        String?               @unique
  kecamatan           String?
  domisili            String?
  fotoKtp             String?
  tglLahir            DateTime?
  bankName            BankNamenya           @default(EMPTY)
  noRekening          String?
  kodeReferral        String                @unique
  uplineId            Int?
  upline              User?                 @relation("ReferralTree", fields: [uplineId], references: [id], onDelete: SetNull)
  downlines           User[]                @relation("ReferralTree")
  balance             Decimal               @default(0) @db.Decimal(12, 2)
  role                Role                  @default(USER)
  statusRegistrasi    RegistrationStatus    @default(PENDING)
  previlegeStatus     Boolean               @default(false)
  projectsCreated     Project[]
  submissions         Submission[]
  withdrawals         Withdrawal[]
  transactions        Transaction[]
  tglDibuat           DateTime              @default(now())
  tglDiperbarui       DateTime              @updatedAt
  Level               Level[]
  LevelHistory        LevelHistory[]
  YoutubeApps         YoutubeApps[]
  HistoryYoutubeApps  HistoryYoutubeApps[]
  ContactAdmin        ContactAdmin[]
  HistoryContactAdmin HistoryContactAdmin[]

  @@map("users")
}

model ContactAdmin {
  id                  Int                   @id @default(autoincrement())
  phoneNumber         String
  tglDibuat           DateTime              @default(now())
  creatorId           Int
  creator             User                  @relation(fields: [creatorId], references: [id])
  historyContactAdmin HistoryContactAdmin[]
}

model HistoryContactAdmin {
  id             Int           @id @default(autoincrement())
  phoneNumber    String
  creatorId      Int
  creator        User          @relation(fields: [creatorId], references: [id])
  tglDibuat      DateTime      @default(now())
  tglDiperbarui  DateTime      @updatedAt
  contactAdminId Int?
  ContactAdmin   ContactAdmin? @relation(fields: [contactAdminId], references: [id])
}

// =============================================
// MODEL PROYEK DAN FIELD DINAMIS
// =============================================

model Project {
  id          Int            @id @default(autoincrement())
  namaProyek  String
  category    String?
  iconUrl     String?
  nilaiProyek Decimal        @db.Decimal(12, 2)
  projectUrl  String?
  deskripsi   String?
  creatorId   Int
  creator     User           @relation(fields: [creatorId], references: [id])
  fields      ProjectField[]
  submissions Submission[]
  tglDibuat   DateTime       @default(now())

  @@map("projects")
}

model ProjectField {
  id               Int               @id @default(autoincrement())
  label            String
  fieldType        FieldType
  isRequired       Boolean           @default(true)
  projectId        Int
  project          Project           @relation(fields: [projectId], references: [id], onDelete: Cascade)
  submissionValues SubmissionValue[]

  @@map("project_fields")
}

// =============================================
// MODEL SUBMISSION PEKERJAAN
// =============================================

model Submission {
  id            Int               @id @default(autoincrement())
  status        SubmissionStatus  @default(PENDING)
  catatanAdmin  String?
  userId        Int
  user          User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId     Int
  project       Project           @relation(fields: [projectId], references: [id], onDelete: Restrict)
  values        SubmissionValue[]
  transactions  Transaction[]
  tglDibuat     DateTime          @default(now())
  level         Level[]
  YoutubeApps   YoutubeApps?      @relation(fields: [youtubeAppsId], references: [id])
  youtubeAppsId Int?

  @@map("submissions")
}

model YoutubeApps {
  id             Int                  @id @default(autoincrement())
  urlYoutube     String
  tglDibuat      DateTime             @default(now())
  tglDiperbarui  DateTime             @updatedAt
  historyYoutube HistoryYoutubeApps[]
  Submission     Submission[]
  creatorId      Int
  creator        User                 @relation(fields: [creatorId], references: [id])
}

model HistoryYoutubeApps {
  id            Int          @id @default(autoincrement())
  urlYoutube    String
  tglDibuat     DateTime     @default(now())
  youtubeAppsId Int?
  YoutubeApps   YoutubeApps? @relation(fields: [youtubeAppsId], references: [id])
  creatorId     Int
  creator       User         @relation(fields: [creatorId], references: [id])
}

model SubmissionValue {
  id             Int          @id @default(autoincrement())
  value          String       @db.Text
  submissionId   Int
  submission     Submission   @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  projectFieldId Int
  projectField   ProjectField @relation(fields: [projectFieldId], references: [id], onDelete: Cascade)

  @@map("submission_values")
}

// =============================================
// MODEL FINANSIAL (TRANSAKSI & PENARIKAN)
// =============================================

model Transaction {
  id              Int             @id @default(autoincrement())
  tipe            TransactionType
  jumlah          Decimal         @db.Decimal(12, 2)
  deskripsi       String
  userId          Int
  user            User            @relation(fields: [userId], references: [id], onDelete: Restrict)
  submissionId    Int?
  submission      Submission?     @relation(fields: [submissionId], references: [id], onDelete: SetNull)
  withdrawalId    Int?            @unique
  withdrawal      Withdrawal?     @relation(fields: [withdrawalId], references: [id])
  transactionDate DateTime        @default(now())

  @@map("transactions")
}

model News {
  id            Int      @id @default(autoincrement())
  imageNews     String
  judul         String?
  description   String?
  newsUrl       String?
  imageNewsUrl  String?
  tglDibuat     DateTime @default(now())
  tglDiperbarui DateTime @updatedAt
}

model Level {
  id            Int            @id @default(autoincrement())
  userId        Int
  user          User           @relation(fields: [userId], references: [id])
  salary        Int
  submissionId  Int?
  submission    Submission?    @relation(fields: [submissionId], references: [id])
  level         Int
  levelHistory  LevelHistory[]
  tglDibuat     DateTime       @default(now())
  tglDiperbarui DateTime       @updatedAt
}

model LevelHistory {
  id        Int      @id @default(autoincrement())
  levelId   Int?
  level     Level?   @relation(fields: [levelId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  tglDibuat DateTime @default(now())
}

model Withdrawal {
  id              Int              @id @default(autoincrement())
  totalWithdrawal Decimal          @db.Decimal(12, 2)
  status          WithdrawalStatus @default(PENDING)
  userId          Int
  user            User             @relation(fields: [userId], references: [id], onDelete: Restrict)
  transaction     Transaction?
  tglDiajukan     DateTime         @default(now())
  tglDiproses     DateTime?

  @@map("withdrawals")
}

// =============================================
// ENUMS (TIPE DATA KUSTOM)
// =============================================

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum RegistrationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum FieldType {
  TEXT
  TEXTAREA
  DROPDOWN
  IMAGE
  FILE
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}

enum WithdrawalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BankNamenya {
  EMPTY
  BCA
  MANDIRI
  UOB
  CIMB
  BNI
  BRI
}

enum TransactionType {
  PENGERJAAN_PROYEK
  KOMISI_UPLINE_1
  KOMISI_UPLINE_2
  PENARIKAN_DANA
  BONUS_OPERASIONAL
  LEVEL_GAJI
}
